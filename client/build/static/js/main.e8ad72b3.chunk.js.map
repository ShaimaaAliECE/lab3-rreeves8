{"version":3,"sources":["api/api.js","LogIn/LogIn.js","IMG/checkMark.jpg","IMG/emptyBox.jpg","IMG/none.jpg","UserData/NewEntry.js","UserData/Row.js","UserData/UserData.js","App/App.js","index.js"],"names":["axios","create","baseURL","LogIn","props","state","logInType","handleClick","credentials","usr","password","handleChange","bind","loginType","this","setState","a","console","log","api","post","then","response","data","error","event","prevState","target","type","value","class","className","onClick","loginselector","onChange","placeholder","name","logIn","Component","NewEntry","i","newCheckBoxs","CheckBox","handleKeyPress","availableObj","availability","findString","Array","from","badEntry","submitted","sendNewentry","NewEntrySend","values","undefined","unshift","x","code","tabs","src","none","alt","CheckedBox","EmptyBox","Row","users","dataFormatted","UserData","getAvailable","get","otherUsers","getOtherUsers","collumns","length","Head","AvailabilityAdjust","set","changeAvailability","App","logInClick","userType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8ad72b3.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({baseURL: '34.130.115.81:80'})","import React, { Component } from 'react'\r\nimport './LogIn.css'\r\nimport api from '../api/api'\r\n\r\nclass LogIn extends Component{\r\n    constructor(props){\r\n        super();\r\n        let credentials = {\r\n            usr: '',\r\n            password: ''\r\n        }\r\n\r\n        this.state = {\r\n            logInType: '',\r\n            handleClick: props.handleClick,\r\n            credentials: credentials\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    loginselector(loginType){\r\n        if(loginType === 'guest'){\r\n            this.state.handleClick('guest');\r\n        }\r\n        else{\r\n            this.setState({\r\n                logInType: loginType\r\n            })\r\n        }\r\n    }\r\n\r\n    async logIn(){\r\n        console.log(this.state.credentials.usr)\r\n        console.log(this.state.credentials.password)\r\n        const response = await api.post('/api/login', {\r\n            ...this.state.credentials\r\n        }).then((response) =>{   \r\n            if(response.data === 'good'){\r\n                this.state.handleClick('admin')\r\n            }\r\n            if(response.data === 'invalid'){\r\n                console.log('bad entry')\r\n            }\r\n        }, (error) => {\r\n            console.log(response)\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        let prevState = this.state;\r\n        let credentials;\r\n        \r\n        if(event.target.type === 'password'){\r\n            credentials = {\r\n                usr: this.state.credentials.usr,\r\n                password: event.target.value\r\n            }\r\n        }\r\n        else{\r\n            credentials = {\r\n                usr: event.target.value,\r\n                password: this.state.credentials.password\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            logInType: prevState.logInType,\r\n            handleClick: prevState.handleClick,\r\n            credentials: credentials\r\n        });\r\n    }\r\n    \r\n    render(){ \r\n        if(this.state.logInType === ''){\r\n            console.log(\"returning LOGIN selector\")\r\n            return (                          \r\n                <div class = 'container'>\r\n                    <h1> Log In Type </h1>\r\n                    <div className = 'buttons'>\r\n                        <button className = 'logins' onClick = {() => this.loginselector('admin')}>Admin</button>\r\n                        <button className = 'logins' onClick = {() => this.loginselector('guest')}>Guest</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if(this.state.logInType === 'admin'){\r\n            return(\r\n                <div class = 'container'>\r\n                    <h1> Log In Type </h1>\r\n                    <div>\r\n                        <ul>\r\n                            <label>Username : </label>   \r\n                            <input value = {this.state.credentials.usr} onChange={this.handleChange} type=\"text\" placeholder=\"Enter Username\" name=\"username\" />  \r\n                        </ul>\r\n                        <ul>\r\n                            <label>Password : </label>\r\n                            <input value = {this.state.credentials.password} onChange={this.handleChange} type=\"password\" placeholder=\"Enter Password\" name=\"password\" />\r\n                        </ul> \r\n                        <button className = 'entry' onClick = {() => this.logIn()}>LogIn</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogIn;","export default __webpack_public_path__ + \"static/media/checkMark.49993c05.jpg\";","export default __webpack_public_path__ + \"static/media/emptyBox.e5eb5ca1.jpg\";","export default __webpack_public_path__ + \"static/media/none.03db8fbb.jpg\";","import React, { Component , useState } from 'react'\r\nimport './UserData.css'\r\nimport CheckedBox from '../IMG/checkMark.jpg'\r\nimport EmptyBox from '../IMG/emptyBox.jpg'\r\nimport none from '../IMG/none.jpg'\r\nimport api from '../api/api';\r\n\r\nclass NewEntry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        let availableObj = props.availability;\r\n\r\n        let availability = []\r\n        console.log(availableObj)\r\n        let findString = \"slot_\"\r\n        for(let i = 1; i <= 10; i++){\r\n            let bool;\r\n            if(availableObj[findString+i] == 1){\r\n                availability[i-1] = true;\r\n            }\r\n            if(availableObj[findString+i] == 0){\r\n                availability[i-1] = false;\r\n            } \r\n        }\r\n\r\n        this.state = {\r\n            CheckBox: Array.from(Array(10), () => {\r\n                return false\r\n            }),\r\n            availability: availability,\r\n            badEntry: '',\r\n            submitted: false,\r\n            name: ''\r\n        }\r\n        this.sendNewentry = this.sendNewentry.bind(this)\r\n        this.NewEntrySend = this.NewEntrySend.bind(this)\r\n        this.handleKeyPress = this.handleKeyPress.bind(this)\r\n\r\n    }\r\n\r\n    onClick = (i, type) => {\r\n        let prevState = this.state;\r\n        let newCheckBoxs = prevState.CheckBox\r\n        newCheckBoxs[i] = type;\r\n        this.setState({\r\n            CheckBox: newCheckBoxs\r\n        })\r\n    }\r\n\r\n    handleKeyPress = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        }) \r\n    }\r\n\r\n\r\n    async sendNewentry(values){\r\n        if(values !== undefined){\r\n            console.log(this.state)\r\n            values.unshift(this.state.name)\r\n            const response = await api.post('/api/newTimeSlot', {\r\n                ...values\r\n            })\r\n            .then((response) =>{      \r\n                let x = response.data.code\r\n                console.log(x)\r\n                if(x !==''){\r\n                    this.setState({\r\n                        badEntry: x\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        submitted: true\r\n                    })\r\n                }\r\n                \r\n            }, (error) => {\r\n                console.log(response)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    NewEntrySend(){\r\n        console.log(\"Clicked submit\")\r\n        let values = [];\r\n\r\n        for(let i = 0; i < 10; i ++){\r\n            if(this.state.CheckBox[i]){\r\n                values[i] = 1;\r\n            }\r\n            if(!this.state.CheckBox[i]){\r\n                values[i] = 0;\r\n            }\r\n        } \r\n        console.log(values)\r\n        this.sendNewentry(values) \r\n    }\r\n\r\n    render(){\r\n        let tabs = []\r\n        \r\n        if(!this.state.submitted){\r\n            for(let i = 0; i < 10; i ++){\r\n                if(!this.state.availability[i]){\r\n                    tabs[i] = <li> \r\n                                <img src={none} alt=\"Empty Box\"/>\r\n                              </li>\r\n                }\r\n                else{\r\n                    if(!this.state.CheckBox[i]){\r\n                        tabs[i] = <li> \r\n                                    <img src={EmptyBox} alt=\"Empty Box\" onClick = {() => {this.onClick((i),true)}}/>\r\n                                </li>\r\n                    }\r\n                    else{\r\n                        tabs[i] = <li> \r\n                                    <img src={CheckedBox} alt=\"CheckedBox\" onClick = {() => {this.onClick((i),false)}}/>\r\n                                </li>\r\n                    }\r\n                }\r\n            }\r\n            if(this.state.badEntry !== ''){\r\n                tabs[11] =<li>\r\n                    <a className = \"message\"> {this.state.badEntry}</a>\r\n                </li>\r\n            }\r\n            else{\r\n                tabs[11] = <li>\r\n                    <button className =\"submit\" onClick ={() => {this.NewEntrySend()}}>Submit</button>\r\n                </li>\r\n            }\r\n        }\r\n        else{\r\n            if(this.state.submitted){\r\n                for(let i = 0; i < 10; i ++){\r\n                    tabs[i] = <li> \r\n                                <img src={none} alt=\"Empty Box\"/>\r\n                              </li>\r\n                }\r\n                tabs[11] =<li>\r\n                    <a className = \"message\"> Submitted!</a>\r\n                </li>\r\n            }\r\n        }\r\n\r\n        return (  \r\n            <ul>\r\n                <input \r\n                    value = {this.state.name}   \r\n                    onChange = {this.handleKeyPress} \r\n                    type=\"name\" \r\n                    placeholder=\"Enter Name\"/>\r\n            {tabs}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewEntry;","import React, { Component , useState } from 'react'\r\nimport CheckedBox from '../IMG/checkMark.jpg'\r\nimport EmptyBox from '../IMG/emptyBox.jpg'\r\n\r\nexport default function Row(props){\r\n    console.log(props.users)\r\n    let users = props.users\r\n\r\n    var dataFormatted = [];     \r\n    \r\n    dataFormatted[0] = <li>\r\n                         <a className = \"message\"> {users['usrName']}</a>\r\n                       </li>\r\n\r\n    let findString = \"slot_\"\r\n\r\n    for(let i = 1; i <= 10; i++){\r\n\r\n        if(users[findString+ (i)] == '1'){\r\n            dataFormatted[i] = <li> <img src={CheckedBox} alt=\"CheckedBox\"/></li>\r\n        }\r\n            \r\n        if(users[findString+ (i)] == '0'){\r\n            dataFormatted[i] = <li><img src={EmptyBox} alt=\"Empty Box\"/></li>\r\n        }\r\n    }\r\n    dataFormatted[12] = <li>\r\n                            <a className = \"spaceFill\"></a>\r\n                        </li>\r\n    console.log(dataFormatted)\r\n\r\n    return(\r\n        <ul className = \"shift\">\r\n            {dataFormatted}\r\n        </ul>\r\n    )\r\n}","import React, { Component , useState } from 'react'\r\nimport api from '../api/api';\r\nimport './UserData.css'\r\nimport NewEntry from './NewEntry';\r\nimport Row from './Row'\r\n\r\n\r\nclass UserData extends Component{ \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            availability: null,\r\n            otherUsers: null\r\n        }\r\n        this.getAvailable = this.getAvailable.bind(this)\r\n\r\n    }\r\n\r\n    async getOtherUsers () {\r\n        console.log(\"fetching other users\")\r\n        try{\r\n            const response = await api.get('/api/getOtherUsers')\r\n            console.log(response)\r\n            console.log(response.data)\r\n            this.setState({\r\n                otherUsers: response.data,\r\n            })\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n\r\n    getAvailable = async () => {\r\n        console.log(\"fetching available\")\r\n        try{\r\n            const response = await api.get('/api/availability')\r\n            console.log(response)\r\n            console.log(response.data)\r\n            this.setState({\r\n                availability: response.data[0],\r\n            })\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.availability === null){\r\n            this.getAvailable()\r\n            /*\r\n            this.setState({\r\n                availability: [true,true,true,true,true,true,true,true,true,true]\r\n            })\r\n            */\r\n        }\r\n        if(this.state.otherUsers === null){\r\n            this.getOtherUsers()\r\n        }\r\n\r\n        if((this.state.availability !== null) && (this.state.otherUsers !== null)){\r\n            let collumns = []\r\n            for(let i = 0; i < this.state.otherUsers.length;i++){\r\n                    collumns[i] = <Row users = {this.state.otherUsers[i]}/>\r\n            \r\n            }\r\n        \r\n            return (\r\n                <div>\r\n                    {collumns}\r\n                    <NewEntry\r\n                        availability = {this.state.availability}/> \r\n                </div> \r\n            )\r\n        }\r\n        return(\r\n            <div></div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default UserData;","import './App.css';\nimport api from '../api/api'\nimport React, { Component } from 'react'\nimport LogIn from '../LogIn/LogIn';\nimport UserData from '../UserData/UserData'\nimport CheckedBox from '../IMG/checkMark.jpg'\nimport EmptyBox from '../IMG/emptyBox.jpg'\nimport Row from '../UserData/Row'\n\nfunction Head(props){\n    let tabs = []\n    tabs[0] = <li> \n                <a> Name </a>\n              </li>\n              \n    for(let i = 1; i <= 10; i ++){\n        tabs[i] = <li> \n                    <a> Slot {i} </a>\n                  </li>\n    }\n\n    return <ul> {tabs} </ul>\n}\n\nclass AvailabilityAdjust extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            CheckBox: Array.from(Array(10), () => {\n                return false\n            }),\n            set: false,\n            badEntry: ''\n        }\n        this.changeAvailability = this.changeAvailability.bind(this)\n    }\n\n    onClick = (i, type) => {\n        let prevState = this.state;\n        let newCheckBoxs = prevState.CheckBox\n        newCheckBoxs[i] = type;\n        this.setState({\n            CheckBox: newCheckBoxs\n        })\n    }\n\n    async changeAvailability(){\n        let values = []\n        for(let i = 0; i < this.state.CheckBox.length; i++){\n            if(this.state.CheckBox[i]===true){\n                values[i] = 1;\n            }\n            else{\n                values[i] = 0;\n            }\n        }\n        console.log(\"changing to :\" + values)\n\n        const response = await api.post('/api/setAvailable', {\n            ...values\n        })\n        .then((response) =>{      \n            let x = response.data.code\n            console.log(x)\n            if(x !==''){\n                this.setState({\n                    badEntry: x\n                })\n            }\n            else{\n                this.setState({\n                    set: true\n                })\n            }\n                \n        }, (error) => {\n            console.log(response)\n        })\n        \n    }\n\n    render(){\n        let availability = []\n        for(let i = 0; i < 10; i ++){   \n            if(!this.state.CheckBox[i]){\n                availability[i] = <li> \n                            <img src={EmptyBox} alt=\"Empty Box\" onClick = {() => {this.onClick((i),true)}}/>\n                        </li>\n            }\n            else{\n                availability[i] = <li> \n                        <img src={CheckedBox} alt=\"CheckedBox\" onClick = {() => {this.onClick((i),false)}}/>\n                        </li>\n            }\n        }\n        if(!this.state.set)\n                availability[11] = <li>\n                                    <button className =\"submit\" onClick ={() => {this.changeAvailability()}}>Change</button>\n                                </li>\n        if(this.state.set){\n            availability[11] =  <li>\n                                   <a> {this.state.badEntry} </a>\n                                </li>\n        }\n        \n        availability.unshift(\n            <li>\n                <a className = \"message\"> Change availability </a>\n            </li>\n        )\n\n        return(\n            <ul>{availability}</ul>\n        );\n\n    }\n}\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            userType: '',\n            otherUsers: null\n        }\n        this.getOtherUsers = this.getOtherUsers.bind(this)\n    }\n    \n    logInClick = (type) => {\n        this.setState({\n            userType: type\n        })\n    }\n\n    async getOtherUsers () {\n        console.log(\"fetching other users\")\n        try{\n            const response = await api.get('/api/getOtherUsers')\n            console.log(response)\n            console.log(response.data)\n            this.setState({\n                otherUsers: response.data,\n            })\n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n\n    render(){\n        if(this.state.userType === ''){\n            return (\n                <LogIn\n                    handleClick = {this.logInClick}\n                ></LogIn>\n            );\n        }\n        else{\n            if(this.state.userType === 'guest'){\n                return (\n                    <div>\n                        <h1> Doodle App</h1>\n                        <div className = \"tableContainer\">\n                            <nav>         \n                                <Head></Head>        \n                                <UserData></UserData>\n                            </nav>\n                        </div>\n                    </div>\n                );\n            }\n            \n            if(this.state.userType === 'admin'){\n                console.log(\"Logged into admin\")\n                if(this.state.otherUsers === null){\n                    this.getOtherUsers()\n                }\n                if(this.state.otherUsers !== null){\n                    let collumns = []\n                    for(let i = 0; i < this.state.otherUsers.length;i++){\n                        collumns[i] = <Row users = {this.state.otherUsers[i]}/>\n                    }\n                    return(\n                        <div>\n                            <h1> Doodle App</h1>\n                            <div className = \"tableContainer\">\n                                <nav>         \n                                    <Head></Head>        \n                                    {collumns}\n                                    <AvailabilityAdjust/> \n                                </nav>\n                            </div>\n                        </div>\n                    );\n                }\n            } \n        }\n        return(\n            <div>loading</div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}